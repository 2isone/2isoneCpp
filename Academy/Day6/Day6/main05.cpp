#include<iostream>

typedef int 정수;
typedef __int8 int8;
typedef __int16 int16;
typedef __int32 int32;
typedef __int64 int64;


using namespace std;

void main()
{
	정수 a = 0;
	int32 id = 1000;

	int myValue = 21000000000;
	cout << myValue << endl;


}

/*
	typedef
	type define
	define: 매크로 전역으로 무언가를 선언하는 역할
	type define: 타입을 선언해주는 역할

	정수 a = 0;

	적극적으로 쓰일만한 문법은 아님, 이런 게 있다는 거 정도만 알아둘 것.

	자료형 설명
	자료형의 종류가 생각보다 많음
	자주 쓰이는 게 int, float, char, string, bool 정도인 것.
	
	__int8, __int16, __int32 등 엄청 많음
	근데 결국 세 개 다 정수형 아닌가?
	> int 에 모든 정수를 담을 수 있는 건 아님, int의 경우 +-21억 정도의 수를 담을 수 있음

	모든 변수는 메모리에 기억함
	RAM < 16G, 32G 
	저장을 하려면 특정 공간을 할당 받아야함
	int > RAM에서 4byte를 할당 받아서 사용함
	4byte에서 표현할 수 있는 숫자에는 한계가 있음
	
	컴퓨터는 모든 것을 0과 1로 표현함, 0과 1이라는 값은 bit
	1byte = 8bit
	1024byte = 1kb

	0000 0000 > 2진수
	1111 1111 > 0 ~ 511 표현 가능
	0000 0000 0000 0000 0000 0000 0000 0000 > 이게 4byte,
	int가 표현할 수 있는 숫자의 한계
	0~42억 정도 (2의 32제곱 -1) 그래서 +-21억 정도까지 표현 가능

	__int64 > 64비트짜리 정수
	그럼 애초에 모든 변수를 int64로 하는 게 낫지 않나?
	> CPU 아키텍처 - intel, AMD 
	> 이득볼 수 있는 자료형이 어셈블리 형태,
	좀 더 빠르게 변수에 접근할 수 있는 자료형이 int이기 때문
	그렇기 때문에 웬만하면 int를 사용함
	메모리 아끼려면 int8도 좋음, 상황마다 적합한 자료형이 다름

	컴퓨터 사이언스 지식
	- 면접용 지식 (6개월 차에 배울 예정)
	- 개인적인 용도로 알아두면 좋은 지식 (강의 중 틈틈히)

	CS 지식은 그닥 쓸모가 없음, 나중에 다른 쪽 기술을 배울 때 참고 지식이 되어준다 정도
	현업에서도 사이언스 지식 많은 사람 그닥? 없음. 그냥 재미로 들읍시다.

*/